
Product
    id (ObjectID)
    name
    description
    image(upload)
    price
    sellerID

Seller
    id (ObjectID)
    name
    username
    password

REST API Standards
- GET, POST, PUT, DELETE


Apis.
    - GetAll Products - GET - done
    - Get one Product - GET - done
    - get products by seller id  - GET - done
    - update product(secure) - PUT - done
    - delete product(secure) - DELETE - done
    - add product(secure) - POST - Done
    - login for seller. - POST - Done

Remaining
    1. Implement token based authentication. - done
        - Create Login API. - Done
        - Create token service to geenrate token on login - done
        - Create Middleware to secure apis.

    2. Upload Files/Images.
        - Update Product Model - Done.
        - Create Middleware (upload file into temp folder.), call next m. - done
        - API will read file from temp and store in db.
        - Postmand/Client needs to use form-data.
        - Update Get API to read file.

MVC
(available to all)
 - Show All products - Done.
 - See detail of product. - Done

(for seller)
 - see seller's products. - done.
 - Udpate a product - done.
 - Delete a product
 - Add Product - done.
 - Login Page
 - Create Session.
 - Secure seller functionalties 

MVC - Model View Controller
- one of the Most popular web development pattern.
- Controller is central part.
- controller takes request.
- model encpsulates data
- view render html content with our data.
- separation of concerns.
- single responsibilities.


Steps for MVC Request.
1. Install EJS (View Engine)
2. Create Controller. - done
3. Create View. - done (with .ejs extension)
4. Create Routes. - done
5. Update Index file. - done
    5.1 Register view engine.
    5.2 Path for views in index
    5.3 Use routes middleware.



    
Steps to create REST API.
1. Configured Routes - done
2. Created Controllers - done
3. Create DB - done
4. Connect NodeJS to Mongodb cluser - done
5. Create Models - Done
6. Write Repository to add product - done
7. Update Controller. - done



Controller->BusinessLogic(Service, Managers)-> Repository(DAL, Persistence Layer)-> DB

Infrastructure Layer (Sending Email)
Entities/Schema Layer 


How Secure APi works?

1. Client passes jwt token in auth header. .
2. Create a middleware to verify token.
    This needs to execute before controller methods.
        if token verified-> call next middleware in pipeline(API)
        else return 401/403.
3. 